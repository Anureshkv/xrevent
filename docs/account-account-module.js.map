{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/auth/auth-routing.ts","./src/app/account/auth/auth.module.ts","./src/app/account/auth/login/login.component.ts","./src/app/account/auth/login/login.component.html","./src/app/account/auth/passwordreset/passwordreset.component.ts","./src/app/account/auth/passwordreset/passwordreset.component.html","./src/app/account/auth/signup/signup.component.ts","./src/app/account/auth/signup/signup.component.html","./src/app/core/services/user.service.ts"],"names":[],"mappings":"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","file":"account-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule) },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AccountRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AccountRoutingModule } from './account-routing.module';\nimport { AuthModule } from './auth/auth.module';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    AccountRoutingModule,\n    AuthModule\n  ]\n})\nexport class AccountModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\nconst routes: Routes = [\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'signup',\n        component: SignupComponent\n    },\n    {\n        path: 'reset-password',\n        component: PasswordresetComponent\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { NgbAlertModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { UiModule } from '../../shared/ui/ui.module';\nimport { AuthRoutingModule } from './auth-routing';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { PasswordresetComponent } from './passwordreset/passwordreset.component';\n\n@NgModule({\n  declarations: [LoginComponent, SignupComponent, PasswordresetComponent],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgbAlertModule,\n    UiModule,\n    AuthRoutingModule\n  ]\n})\nexport class AuthModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { AuthfakeauthenticationService } from '../../../core/services/authfake.service';\n\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n  submitted = false;\n  error = '';\n  returnUrl: string;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, public authenticationService: AuthenticationService, public authFackservice: AuthfakeauthenticationService) { }\n\n  ngOnInit() {\n    document.body.removeAttribute('data-layout');\n    document.body.classList.add('auth-body-bg');\n\n    this.loginForm = this.formBuilder.group({\n      email: ['xrevent@gmail.com', [Validators.required, Validators.email]],\n      password: ['123456', [Validators.required]],\n    });\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() { return this.loginForm.controls; }\n\n  /**\n   * Form submit\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.login(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.router.navigate(['/']);\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.authFackservice.login(this.f.email.value, this.f.password.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.router.navigate(['/']);\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a routerLink=\"\"><i class=\"mdi mdi-home-variant h2 text-white\"></i></a>\n</div>\n<div>\n  <div class=\"container-fluid p-0\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-lg-4\">\n        <div class=\"authentication-page-content p-4 d-flex align-items-center min-vh-100\">\n          <div class=\"w-100\">\n            <div class=\"row justify-content-center\">\n              <div class=\"col-lg-9\">\n                <div>\n                  <div class=\"text-center\">\n                    <div>\n                      <a routerLink=\"\" class=\"logo\"><img src=\"favicon.ico\" height=\"20\" alt=\"logo\"></a>\n                    </div>\n\n                    <h4 class=\"font-size-18 mt-4\">Welcome !</h4>\n                    <p class=\"text-muted\">Singn in to continu with virtual platform.</p>\n                  </div>\n\n                  <div class=\"p-2 mt-5\">\n                    <form class=\"form-horizontal\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n                      <div class=\"form-group auth-form-group-custom mb-4\">\n                        <i class=\"ri-user-2-line auti-custom-input-icon\"></i>\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                      </div>\n\n                      <div class=\"form-group auth-form-group-custom mb-4\">\n                        <i class=\"ri-lock-2-line auti-custom-input-icon\"></i>\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\" id=\"password\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" placeholder=\"Password\" />\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        </div>\n                      </div>\n\n                      <div class=\"custom-control custom-checkbox\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id=\"customControlInline\">\n                        <label class=\"custom-control-label\" for=\"customControlInline\">Remember me</label>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                        <button class=\"btn btn-primary w-md waves-effect waves-light\" type=\"submit\">Log In</button>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                        <a routerLink=\"/account/reset-password\" class=\"text-muted\"><i class=\"mdi mdi-lock mr-1\"></i>\n                          Forgot\n                          your\n                          password?</a>\n                      </div>\n                    </form>\n                  </div>\n\n                  <div class=\"mt-5 text-center\">\n                    <p>Don't have an account ? <a routerLink=\"/account/signup\" class=\"font-weight-medium text-primary\">\n                        Register </a> </p>\n                    \n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-8\">\n        <div class=\"authentication-bg\">\n          <div class=\"bg-overlay\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- end page -->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\n\n@Component({\n  selector: 'app-passwordreset',\n  templateUrl: './passwordreset.component.html',\n  styleUrls: ['./passwordreset.component.scss']\n})\n\n/**\n * Reset-password component\n */\nexport class PasswordresetComponent implements OnInit, AfterViewInit {\n\n  resetForm: FormGroup;\n  submitted = false;\n  error = '';\n  success = '';\n  loading = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService) { }\n\n  ngOnInit() {\n    document.body.removeAttribute('data-layout');\n    document.body.classList.add('auth-body-bg');\n\n    this.resetForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.resetForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.success = '';\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.resetForm.invalid) {\n      return;\n    }\n    if (environment.defaultauth === 'firebase') {\n      this.authenticationService.resetPassword(this.f.email.value)\n        .catch(error => {\n          this.error = error ? error : '';\n        });\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a routerLink=\"\"><i class=\"mdi mdi-home-variant h2 text-white\"></i></a>\n</div>\n<div>\n  <div class=\"container-fluid p-0\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-lg-4\">\n        <div class=\"authentication-page-content p-4 d-flex align-items-center min-vh-100\">\n          <div class=\"w-100\">\n            <div class=\"row justify-content-center\">\n              <div class=\"col-lg-9\">\n                <div>\n                  <div class=\"text-center\">\n                    <div>\n                      <a routerLink=\"\" class=\"logo\"><img src=\"\" height=\"20\" alt=\"logo\"></a>\n                    </div>\n\n                    <h4 class=\"font-size-18 mt-4\">Reset Password</h4>\n                    <p class=\"text-muted\">Reset your password to Nazox.</p>\n                  </div>\n\n                  <div class=\"p-2 mt-5\">\n                    <div class=\"alert alert-success mb-4\" role=\"alert\">\n                      Enter your Email and instructions will be sent to you!\n                    </div>\n                    <form class=\"form-horizontal\" [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\">\n                      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                      <div class=\"form-group auth-form-group-custom mb-4\">\n                        <i class=\"ri-mail-line auti-custom-input-icon\"></i>\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                        <button class=\"btn btn-primary w-md waves-effect waves-light\" type=\"submit\">Reset</button>\n                      </div>\n                    </form>\n                  </div>\n\n                  <div class=\"mt-5 text-center\">\n                    <p>Don't have an account ? <a routerLink=\"/account/login\" class=\"font-weight-medium text-primary\">\n                        Log in\n                      </a> </p>\n                  </div>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-8\">\n        <div class=\"authentication-bg\">\n          <div class=\"bg-overlay\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- end page -->\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthenticationService } from '../../../core/services/auth.service';\nimport { environment } from '../../../../environments/environment';\nimport { first } from 'rxjs/operators';\nimport { UserProfileService } from '../../../core/services/user.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit, AfterViewInit {\n\n  signupForm: FormGroup;\n  submitted = false;\n  error = '';\n  successmsg = false;\n\n  // set the currenr year\n  year: number = new Date().getFullYear();\n\n  // tslint:disable-next-line: max-line-length\n  constructor(private formBuilder: FormBuilder, private route: ActivatedRoute, private router: Router, private authenticationService: AuthenticationService,\n              private userService: UserProfileService) { }\n\n  ngOnInit() {\n    document.body.removeAttribute('data-layout');\n    document.body.classList.add('auth-body-bg');\n\n    this.signupForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  ngAfterViewInit() {\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.signupForm.controls; }\n\n  /**\n   * On submit form\n   */\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.signupForm.invalid) {\n      return;\n    } else {\n      if (environment.defaultauth === 'firebase') {\n        this.authenticationService.register(this.f.email.value, this.f.password.value).then((res: any) => {\n          this.successmsg = true;\n          if (this.successmsg) {\n            this.router.navigate(['/']);\n          }\n        })\n          .catch(error => {\n            this.error = error ? error : '';\n          });\n      } else {\n        this.userService.register(this.signupForm.value)\n          .pipe(first())\n          .subscribe(\n            data => {\n              this.successmsg = true;\n              if (this.successmsg) {\n                this.router.navigate(['/account/login']);\n              }\n            },\n            error => {\n              this.error = error ? error : '';\n            });\n      }\n    }\n  }\n}\n","<div class=\"home-btn d-none d-sm-block\">\n  <a routerLink=\"\"><i class=\"mdi mdi-home-variant h2 text-white\"></i></a>\n</div>\n<div>\n  <div class=\"container-fluid p-0\">\n    <div class=\"row no-gutters\">\n      <div class=\"col-lg-4\">\n        <div class=\"authentication-page-content p-4 d-flex align-items-center min-vh-100\">\n          <div class=\"w-100\">\n            <div class=\"row justify-content-center\">\n              <div class=\"col-lg-9\">\n                <div>\n                  <div class=\"text-center\">\n                    <div>\n                      <a routerLink=\"\" class=\"logo\"><img src=\"favicon.ico\" height=\"20\" alt=\"logo\"></a>\n                    </div>\n\n                    <h4 class=\"font-size-18 mt-4\">Register account</h4>\n                    <p class=\"text-muted\">Get you XR-EVENT account</p>\n                  </div>\n\n                  <div class=\"p-2 mt-5\">\n                    <form class=\"form-horizontal\" [formGroup]=\"signupForm\" (ngSubmit)=\"onSubmit()\">\n                      <ngb-alert type=\"success\" *ngIf=\"successmsg\" [dismissible]=\"false\">Registeration successfull.\n                      </ngb-alert>\n                      <ngb-alert type=\"danger\" *ngIf=\"error\" [dismissible]=\"false\">{{ error }}</ngb-alert>\n\n                      <div class=\"form-group auth-form-group-custom mb-4\">\n                        <i class=\"ri-user-2-line auti-custom-input-icon\"></i>\n                        <label for=\"username\">Username</label>\n                        <input type=\"text\" formControlName=\"username\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" id=\"username\"\n                          placeholder=\"Enter username\">\n                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.username.errors.required\">Userame is required</div>\n                        </div>\n                      </div>\n                      <div class=\"form-group auth-form-group-custom mb-4\">\n                        <i class=\"ri-mail-line auti-custom-input-icon\"></i>\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" formControlName=\"email\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" id=\"email\" placeholder=\"Email\">\n                        <div *ngIf=\"submitted && f.email.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.email.errors.required\">Email is required</div>\n                          <div *ngIf=\"f.email.errors.email\">Email must be a valid email address</div>\n                        </div>\n                      </div>\n                      <div class=\"form-group auth-form-group-custom mb-4\">\n                        <i class=\"ri-lock-2-line auti-custom-input-icon\"></i>\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\" formControlName=\"password\" class=\"form-control\"\n                          [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" id=\"password\"\n                          placeholder=\"Password\">\n                        <div *ngIf=\"submitted && f.password.errors\" class=\"invalid-feedback\">\n                          <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        </div>\n                      </div>\n\n                      <div class=\"text-center\">\n                        <button class=\"btn btn-primary w-md waves-effect waves-light\" type=\"submit\">Register</button>\n                      </div>\n\n                      <div class=\"mt-4 text-center\">\n                        <p class=\"mb-0\">By registering you agree to the XR-event <a href=\"#\" class=\"text-primary\">Terms of\n                            Use</a></p>\n                      </div>\n                    </form>\n                  </div>\n\n                  <div class=\"mt-5 text-center\">\n                    <p>Already have an account ? <a routerLink=\"/account/login\" class=\"font-weight-medium text-primary\">\n                        Login</a> </p>\n                    \n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-8\">\n        <div class=\"authentication-bg\">\n          <div class=\"bg-overlay\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<!-- end page -->\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../models/auth.models';\n\n@Injectable({ providedIn: 'root' })\nexport class UserProfileService {\n    constructor(private http: HttpClient) { }\n\n    getAll() {\n        return this.http.get<User[]>(`/api/login`);\n    }\n\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n}\n"],"sourceRoot":"webpack:///"}